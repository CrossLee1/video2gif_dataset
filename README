========================================================================

Yahoo! Video2GIF dataset, version 0.9

The Video2GIF dataset contains the IDs and URLs of over 100,000 GIFs and their source videos along with the alignment of the GIF to the video.
The GIFs are collected from GIF websites (makeagif.com, gifsoup.com) in Summer 2015.
The source videos were collected from YouTube.
In addition the dataset contain 357 videos as the test set, which are licensed
under Creative Commons (CC-BY) license. The dataset shall be used to evaluate GIF creation and video highlight techniques.

If you end up using the dataset, we ask you to cite the following paper:

    Michael Gygli, Yale Song, Liangliang Cao
    "Video2GIF: Automatic Generation of Animated GIFs from Video," IEEE CVPR 2016

If you have any question regarding the dataset, please contact:

    Michael Gygli <gygli@vision.ee.ethz.ch>

License: This dataset is licensed under BSD, see LICENSE file
========================================================================

Full description:

This dataset contains one zip-compressed archive file.

The content of the file is as follows:

(a) "metadata.txt" This file contains the information on the GIFs, their corresponding source video ID and the temporal alignment of the GIF to the video.
    It contains the following fields:
    youtube_id, is_creative_commons, gif_id, gif_url, gif_start_frame, gif_end_frame, 
    gif_start_sec, gif_end_sec, gif_title, gif_views, gif_age, video_title, video_views,
    video_publish_date, video_likes, video_duration, video_frame_count, 
    video_category, video_rating, video_description, video_retrieved_date

(b) "video_tags.txt‚Äù
    A file containing a list of video tags for each video.
    Format: YoutubeID;\t tag1; tag2; ...; tagN

(c) "testset.txt" 
    It contains the YouTubeIDs of the videos used to evaluate our method
    We provide these videos on https://data.vision.ee.ethz.ch/cvl/video2gif/YouTubeID.mp4

(d) "./evaluation/"
    This directory contains evaluation code for nMSD and Average Precision
    it requires Python packages 'numpy', 'scikit-learn' and 'pandas' which can be installed using pip

(e) "example.py"
    This script shows how to evaluate the predictions of a model


Last edit: March 24, 2016
